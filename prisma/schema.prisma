generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  Patient
  Medecin
}

enum AccessRequestStatus {
  PENDING
  APPROVED
  REJECTED
}

enum RecordType {
  CONSULTATION
  ORDONNANCE
  ANALYSE
  AUTRE
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  password      String
  role          UserRole
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Champs communs
  firstName     String
  lastName      String
  gender        String
  address       String
  phoneNumber   String
  socialSecurityNumber String @unique

  // Champs spécifiques au médecin
  numeroOrdre    String?   @unique // Numéro d’inscription à l’Ordre des Médecins (unique pour les médecins)
  speciality    String?
  hospital      String?  //  Ajout de l’hôpital pour les médecins

  // Champs spécifiques au patient
  dateOfBirth   DateTime?
  bloodType     String?
  allergies     String?
  medicalHistory String?

  // Relations
  medicalRecords    MedicalRecord[]  @relation("PatientRecords")
  authoredRecords   MedicalRecord[]  @relation("DoctorRecords")
  accessRequests    AccessRequest[]  @relation("RequestedBy")
  accessGrants      AccessRequest[]  @relation("GrantedTo")
}

model MedicalRecord {
  id          String     @id @default(cuid())
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  title       String
  content     String
  type        RecordType

  // Relations
  patientId   String
  patient     User       @relation("PatientRecords", fields: [patientId], references: [id])
  doctorId    String
  doctor      User       @relation("DoctorRecords", fields: [doctorId], references: [id])

  @@index([patientId])
  @@index([doctorId])
}

model AccessRequest {
  id            String               @id @default(cuid())
  createdAt     DateTime             @default(now())
  updatedAt     DateTime             @updatedAt
  status        AccessRequestStatus
  expiresAt     DateTime

  // Relations
  requestedById String
  requestedBy   User                @relation("RequestedBy", fields: [requestedById], references: [id])
  grantedToId   String
  grantedTo     User                @relation("GrantedTo", fields: [grantedToId], references: [id])

  @@index([requestedById])
  @@index([grantedToId])
}
